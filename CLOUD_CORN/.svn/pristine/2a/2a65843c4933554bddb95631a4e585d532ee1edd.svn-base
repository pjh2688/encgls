package com.enc.business.front;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.swing.filechooser.FileSystemView;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.enc.aop.AdminLoginAspect;
import com.enc.business.admin.ADM02Controller;
import com.enc.config.SolutionConfig;
import com.enc.dto.BoardQna;
import com.typhoon.framework.HttpServletResponseUtil;
import com.typhoon.framework.file.FileDownloader;
import com.typhoon.framework.json.JSONResMessage;
import com.typhoon.framework.json.JSONUtil;

@Controller
@RequestMapping({"/front/03"})
public class BIZ03Controller {
	private final org.slf4j.Logger LOGGER 			= org.slf4j.LoggerFactory.getLogger("TYPHOON_LOG");
	
	public static String FILE_SUB_DIR_BBS 			= ADM02Controller.FILE_SUB_DIR_BBS;
	
	public static String FILE_SUB_DIR_FAQ 			= ADM02Controller.FILE_SUB_DIR_FAQ;
	
	public static String FILE_SUB_DIR_QNA 			= ADM02Controller.FILE_SUB_DIR_QNA;
	
	
	@Autowired
    private SolutionConfig solutionConfig;
	
	@Autowired
	private BIZ03Service bIZ03Service;
	
	
    /**
     * 고객지원/공지사항
     * 
     * @return
     */
    @GetMapping({"", "/", "/index", "/01"})
	public ModelAndView biz03_01(HttpServletRequest request) {
    	ModelAndView mv = new ModelAndView("/front/03/01");
		return mv;
	}
    
	@PostMapping("/01AL")
	public @ResponseBody JSON adm_01AL(HttpServletRequest request, @RequestBody JSONObject paramJson) throws Exception {
		JSONResMessage resJson 		= null;
		try {
			resJson 				= this.bIZ03Service.adm_01AL(paramJson);
		} catch(Exception e) {
			LOGGER.error("adm_01AL", e);
			resJson 				= new JSONResMessage(JSONResMessage.FAIL, "요청작업 처리중 오류가 발생했습니다");
		}
		
		return resJson.getResponseMessage();
	}
	
	@PostMapping("/01PA")
	public ModelAndView adm_01PA(HttpServletRequest request, @RequestBody JSONObject paramJson) throws Exception {
		ModelAndView mv 			= new ModelAndView("/front/03/01PA");
		JSONObject bean 			= null;
		try {
			bean 					= this.bIZ03Service.adm_01PA(paramJson, (request.getHeader("X-FORWARDED-FOR") != null)? request.getHeader("X-FORWARDED-FOR") : request.getRemoteAddr());
			mv.addObject("bean", bean);
		} catch(Exception e) {
			LOGGER.error("adm_01PA", e);
		}
		
		return mv;
	}
	
	@RequestMapping("/01FD")
	@AdminLoginAspect
	public void dn_01FD(HttpServletRequest request, HttpServletResponse response) throws Exception {
		JSONObject paramJson 	= JSONUtil.makeJSONObjectFromRequest(request);
		
		String downloadName 	= paramJson.getString("original");
		String webFilePath 		= paramJson.getString("filepath");
		String realDirPath 		= solutionConfig.getUploaddir(); //request.getSession().getServletContext().getRealPath("/");
		//System.out.println("realFilePath:" + realDirPath);
		File dir 				= new File(realDirPath, FILE_SUB_DIR_BBS);
		File file 				= new File(dir, webFilePath);
		//System.out.println("file:" + file.getAbsolutePath());
		try {
			FileDownloader.download(request, response, file, downloadName);
		} catch(FileNotFoundException e) {
			HttpServletResponseUtil.writeLayerAlertMessage(response, "요청하신 파일은 존재하지않습니다");
		} catch(Exception e) {
			HttpServletResponseUtil.writeLayerAlertMessage(response, "전송중 기타 오류 발생");
		}
	}
	
	
		
		
    
    /**
     * FAQ 목록
     * 
     * @return
     */
    @GetMapping({"/02"})
	public ModelAndView biz_02(HttpServletRequest request) throws Exception {
    	ModelAndView mv = new ModelAndView("/front/03/02");
    	mv.addObject("list", this.bIZ03Service.biz_02(new JSONObject()));
    	
		return mv;
	}
    
    /**
     * 문의하기
     * 
     * @return
     */
    @GetMapping({"/03"})
	public ModelAndView biz03_03(HttpServletRequest request) {
    	ModelAndView mv = new ModelAndView("/front/03/03");
		return mv;
	}
    
    @GetMapping("/03/inquire")
    public ModelAndView biz03_03() {
    	ModelAndView mv = new ModelAndView("/front/03/inquire");
		return mv;
	}
    
    @PostMapping("/03/inquire")
   	@ResponseBody
   	public Map<String, Object> biz03_03(@RequestParam("file") MultipartFile file, BoardQna board) { // ajax로 날라온 데이터가 여기에 저장됨
   			
   		Map<String, Object> map = new HashMap<String, Object>();
   		
   		
   		System.out.println(board.getTitle());
   		System.out.println(board.getWriter_nm());
   		System.out.println(board.getPassword());	
   		System.out.println(board.getDoc_body_long());
   		System.out.println(file.getOriginalFilename());
   	
   		// 파일 이름을 등록한다.
   		board.setFile_original_name(file.getOriginalFilename());
   		
   		System.out.println(board.getFile_original_name());
   	
   		// 통신까진 완료 파일을 DB에 저장하는거 다음에 해야된다.
   		
   		// 9. 응답 데이터 세팅(ajax랑 주고 받음)
   		map.put("qna", board);
   
   		return map;
   	}
    

    
   
 
   
    
    
}
